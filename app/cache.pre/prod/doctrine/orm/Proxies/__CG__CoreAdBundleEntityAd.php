<?php

namespace Proxies\__CG__\Core\AdBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Ad extends \Core\AdBundle\Entity\Ad implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Core\\AdBundle\\Entity\\Ad' . "\0" . 'id', 'price', 'status', 'userFavorite', '' . "\0" . 'Core\\AdBundle\\Entity\\Ad' . "\0" . 'views', 'subAd', 'rating', '' . "\0" . 'Core\\AdBundle\\Entity\\Ad' . "\0" . 'userCreate', '' . "\0" . 'Core\\AdBundle\\Entity\\Ad' . "\0" . 'category', 'executDays', '' . "\0" . 'Core\\AdBundle\\Entity\\Ad' . "\0" . 'title', '' . "\0" . 'Core\\AdBundle\\Entity\\Ad' . "\0" . 'dateCreated', '' . "\0" . 'Core\\AdBundle\\Entity\\Ad' . "\0" . 'dateUpdated', '' . "\0" . 'Core\\AdBundle\\Entity\\Ad' . "\0" . 'slug', '' . "\0" . 'Core\\AdBundle\\Entity\\Ad' . "\0" . 'description', '' . "\0" . 'Core\\AdBundle\\Entity\\Ad' . "\0" . 'instruction', '' . "\0" . 'Core\\AdBundle\\Entity\\Ad' . "\0" . 'photos', '' . "\0" . 'Core\\AdBundle\\Entity\\Ad' . "\0" . 'tags');
        }

        return array('__isInitialized__', '' . "\0" . 'Core\\AdBundle\\Entity\\Ad' . "\0" . 'id', 'price', 'status', 'userFavorite', '' . "\0" . 'Core\\AdBundle\\Entity\\Ad' . "\0" . 'views', 'subAd', 'rating', '' . "\0" . 'Core\\AdBundle\\Entity\\Ad' . "\0" . 'userCreate', '' . "\0" . 'Core\\AdBundle\\Entity\\Ad' . "\0" . 'category', 'executDays', '' . "\0" . 'Core\\AdBundle\\Entity\\Ad' . "\0" . 'title', '' . "\0" . 'Core\\AdBundle\\Entity\\Ad' . "\0" . 'dateCreated', '' . "\0" . 'Core\\AdBundle\\Entity\\Ad' . "\0" . 'dateUpdated', '' . "\0" . 'Core\\AdBundle\\Entity\\Ad' . "\0" . 'slug', '' . "\0" . 'Core\\AdBundle\\Entity\\Ad' . "\0" . 'description', '' . "\0" . 'Core\\AdBundle\\Entity\\Ad' . "\0" . 'instruction', '' . "\0" . 'Core\\AdBundle\\Entity\\Ad' . "\0" . 'photos', '' . "\0" . 'Core\\AdBundle\\Entity\\Ad' . "\0" . 'tags');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Ad $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getTags()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTags', array());

        return parent::getTags();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaggableType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaggableType', array());

        return parent::getTaggableType();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaggableId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaggableId', array());

        return parent::getTaggableId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTags($tags)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTags', array($tags));

        return parent::setTags($tags);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserCreate(\Core\UserBundle\Entity\User $userCreate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserCreate', array($userCreate));

        return parent::setUserCreate($userCreate);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserCreate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserCreate', array());

        return parent::getUserCreate();
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', array());

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug($slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', array($slug));

        return parent::setSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateCreated', array());

        return parent::getDateCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateCreated($dateCreated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateCreated', array($dateCreated));

        return parent::setDateCreated($dateCreated);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateUpdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateUpdated', array());

        return parent::getDateUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateUpdated($dateUpdated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateUpdated', array($dateUpdated));

        return parent::setDateUpdated($dateUpdated);
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory($category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', array($category));

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', array());

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function getViews()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getViews', array());

        return parent::getViews();
    }

    /**
     * {@inheritDoc}
     */
    public function setViews($views)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setViews', array($views));

        return parent::setViews($views);
    }

    /**
     * {@inheritDoc}
     */
    public function addUserFavorite(\Core\UserBundle\Entity\User $userFavorite)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUserFavorite', array($userFavorite));

        return parent::addUserFavorite($userFavorite);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUserFavorite(\Core\UserBundle\Entity\User $userFavorite)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUserFavorite', array($userFavorite));

        return parent::removeUserFavorite($userFavorite);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsUserFavorite(\Core\UserBundle\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsUserFavorite', array($user));

        return parent::getIsUserFavorite($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserFavorite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserFavorite', array());

        return parent::getUserFavorite();
    }

    /**
     * {@inheritDoc}
     */
    public function getExecutDays()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExecutDays', array());

        return parent::getExecutDays();
    }

    /**
     * {@inheritDoc}
     */
    public function setExecutDays($executDays)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExecutDays', array($executDays));

        return parent::setExecutDays($executDays);
    }

    /**
     * {@inheritDoc}
     */
    public function addPhoto($photo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPhoto', array($photo));

        return parent::addPhoto($photo);
    }

    /**
     * {@inheritDoc}
     */
    public function setPhotos($photo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhotos', array($photo));

        return parent::setPhotos($photo);
    }

    /**
     * {@inheritDoc}
     */
    public function removePhoto(\Core\AdBundle\Entity\AdAttach $photo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePhoto', array($photo));

        return parent::removePhoto($photo);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhotos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhotos', array());

        return parent::getPhotos();
    }

    /**
     * {@inheritDoc}
     */
    public function getCover()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCover', array());

        return parent::getCover();
    }

    /**
     * {@inheritDoc}
     */
    public function getInstruction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstruction', array());

        return parent::getInstruction();
    }

    /**
     * {@inheritDoc}
     */
    public function setInstruction($instruction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInstruction', array($instruction));

        return parent::setInstruction($instruction);
    }

    /**
     * {@inheritDoc}
     */
    public function addSubAd(\Core\AdBundle\Entity\AdSub $subAd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSubAd', array($subAd));

        return parent::addSubAd($subAd);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSubAd(\Core\AdBundle\Entity\AdSub $subAd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSubAd', array($subAd));

        return parent::removeSubAd($subAd);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubAd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubAd', array());

        return parent::getSubAd();
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', array());

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', array($price));

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getRating()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRating', array());

        return parent::getRating();
    }

    /**
     * {@inheritDoc}
     */
    public function setRating($rating)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRating', array($rating));

        return parent::setRating($rating);
    }

    /**
     * {@inheritDoc}
     */
    public function getRatingStars()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRatingStars', array());

        return parent::getRatingStars();
    }

}
